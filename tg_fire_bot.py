import os
import random
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext

# üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "8061629633:AAHR_ZJC1LRinp-PUfjFoeJsdgcIHge3F6s"
CHAT_ID = -1002286664635  # ID –≥—Ä—É–ø–ø—ã
OWNER_ID = 1431532712      # —Ç–≤–æ–π Telegram ID

# üìÇ —Ñ–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
USERS_FILE = "users.txt"
ADMINS_FILE = "admins.txt"
EMOJI_FILE = "emoji.txt"

# ======================
# üîß –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏
# ======================
def load_list(filename):
    if not os.path.exists(filename):
        return []
    with open(filename, "r", encoding="utf-8") as f:
        return [line.strip() for line in f if line.strip()]

def save_list(filename, items):
    with open(filename, "w", encoding="utf-8") as f:
        f.write("\n".join(items))

# ======================
# üõ† –ö–æ–º–∞–Ω–¥—ã
# ======================
def help_cmd(update: Update, context: CallbackContext):
    text = (
        "üìú –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/addall user1 user2 ... ‚Äì –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        "/add user ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "/dell user ‚Äì —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "/clear ‚Äì –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫\n"
        "/list ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        "/fire ‚Äì –≤—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É\n"
        "/addadm user_id ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü)\n"
        "/emo üòÄ ‚Äì —Å–º–µ–Ω–∏—Ç—å —ç–º–æ–¥–∑–∏\n"
        "/help ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    )
    update.message.reply_text(text)

def start(update: Update, context: CallbackContext):
    help_cmd(update, context)
    admins = load_list(ADMINS_FILE)
    update.message.reply_text(f"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {', '.join(admins) if admins else '–ø–æ–∫–∞ –Ω–µ—Ç'}")

def addadm(update: Update, context: CallbackContext):
    if update.effective_user.id != OWNER_ID:
        update.message.reply_text("‚õî –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –∞–¥–º–∏–Ω–æ–≤")
        return
    if not context.args:
        update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π: /addadm user_id")
        return
    new_admin = context.args[0]
    admins = load_list(ADMINS_FILE)
    if new_admin not in admins:
        admins.append(new_admin)
        save_list(ADMINS_FILE, admins)
        update.message.reply_text(f"‚úÖ –ê–¥–º–∏–Ω {new_admin} –¥–æ–±–∞–≤–ª–µ–Ω")
    else:
        update.message.reply_text("‚ö†Ô∏è –≠—Ç–æ—Ç –∞–¥–º–∏–Ω —É–∂–µ –µ—Å—Ç—å")

def addall(update: Update, context: CallbackContext):
    user_id = str(update.effective_user.id)
    admins = load_list(ADMINS_FILE)
    if user_id not in admins and user_id != str(OWNER_ID):
        update.message.reply_text("‚õî –ù–µ—Ç –ø—Ä–∞–≤")
        return
    if not context.args:
        update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π: /addall user1 user2 ...")
        return
    users = load_list(USERS_FILE)
    for user in context.args:
        if user not in users:
            users.append(user)
    save_list(USERS_FILE, users)
    update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {' '.join(context.args)}")

def add(update: Update, context: CallbackContext):
    user_id = str(update.effective_user.id)
    admins = load_list(ADMINS_FILE)
    if user_id not in admins and user_id != str(OWNER_ID):
        update.message.reply_text("‚õî –ù–µ—Ç –ø—Ä–∞–≤")
        return
    if not context.args:
        update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π: /add user")
        return
    user = context.args[0]
    users = load_list(USERS_FILE)
    if user not in users:
        users.append(user)
        save_list(USERS_FILE, users)
        update.message.reply_text(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –¥–æ–±–∞–≤–ª–µ–Ω")
    else:
        update.message.reply_text("‚ö†Ô∏è –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å")

def dell(update: Update, context: CallbackContext):
    user_id = str(update.effective_user.id)
    admins = load_list(ADMINS_FILE)
    if user_id not in admins and user_id != str(OWNER_ID):
        update.message.reply_text("‚õî –ù–µ—Ç –ø—Ä–∞–≤")
        return
    if not context.args:
        update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π: /dell user")
        return
    user = context.args[0]
    users = load_list(USERS_FILE)
    if user in users:
        users.remove(user)
        save_list(USERS_FILE, users)
        update.message.reply_text(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} —É–¥–∞–ª—ë–Ω")
    else:
        update.message.reply_text("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ")

def clear(update: Update, context: CallbackContext):
    user_id = str(update.effective_user.id)
    admins = load_list(ADMINS_FILE)
    if user_id not in admins and user_id != str(OWNER_ID):
        update.message.reply_text("‚õî –ù–µ—Ç –ø—Ä–∞–≤")
        return
    save_list(USERS_FILE, [])
    update.message.reply_text("‚úÖ –°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω")

def list_users(update: Update, context: CallbackContext):
    users = load_list(USERS_FILE)
    if users:
        update.message.reply_text("üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n" + "\n".join(users))
    else:
        update.message.reply_text("‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç")

def emo(update: Update, context: CallbackContext):
    user_id = str(update.effective_user.id)
    admins = load_list(ADMINS_FILE)
    if user_id not in admins and user_id != str(OWNER_ID):
        update.message.reply_text("‚õî –ù–µ—Ç –ø—Ä–∞–≤")
        return
    if not context.args:
        update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π: /emo üòÄ")
        return
    emoji = context.args[0]
    save_list(EMOJI_FILE, [emoji])
    update.message.reply_text(f"‚úÖ –≠–º–æ–¥–∑–∏ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {emoji}")

def fire(update: Update, context: CallbackContext):
    users = load_list(USERS_FILE)
    emoji = load_list(EMOJI_FILE)
    emoji = emoji[0] if emoji else "üî•"
    if users:
        chosen = random.choice(users)
        text = f"–§–æ—Ä—Ç—É–Ω–∞ –≤—ã–±—Ä–∞–ª–∞ —Ç–µ–±—è {emoji}\n{chosen}"
        context.bot.send_message(chat_id=CHAT_ID, text=text)
    else:
        update.message.reply_text("‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç")

# ======================
# üöÄ MAIN
# ======================
def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help_cmd))
    dp.add_handler(CommandHandler("addadm", addadm))
    dp.add_handler(CommandHandler("addall", addall))
    dp.add_handler(CommandHandler("add", add))
    dp.add_handler(CommandHandler("dell", dell))
    dp.add_handler(CommandHandler("clear", clear))
    dp.add_handler(CommandHandler("list", list_users))
    dp.add_handler(CommandHandler("emo", emo))
    dp.add_handler(CommandHandler("fire", fire))

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
