import os
import random
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# üîë –ë–µ—Ä—ë–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ Environment Variables –Ω–∞ Render
TOKEN = os.getenv("TOKEN")   # —Ç–≤–æ–π —Ç–æ–∫–µ–Ω
CHAT_ID = int(os.getenv("CHAT_ID"))  # id –≥—Ä—É–ø–ø—ã, –∫—É–¥–∞ –±–æ—Ç –ø–∏—à–µ—Ç
OWNER_ID = int(os.getenv("OWNER_ID"))  # —Ç–≤–æ–π –ª–∏—á–Ω—ã–π id

# üìÇ —Ñ–∞–π–ª—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –∏ —é–∑–µ—Ä–æ–≤
USERS_FILE = "users.txt"
ADMINS_FILE = "admins.txt"
EMOJI_FILE = "emoji.txt"


# ======================
# üîß –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏
# ======================
def load_list(filename):
    if not os.path.exists(filename):
        return []
    with open(filename, "r", encoding="utf-8") as f:
        return [line.strip() for line in f if line.strip()]


def save_list(filename, items):
    with open(filename, "w", encoding="utf-8") as f:
        f.write("\n".join(items))


# ======================
# üõ† –ö–æ–º–∞–Ω–¥—ã
# ======================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç –ø–∏—à–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –∞–¥–º–∏–Ω–æ–≤"""
    admins = load_list(ADMINS_FILE)
    users = load_list(USERS_FILE)
    emoji = load_list(EMOJI_FILE)
    emoji = emoji[0] if emoji else "üî•"

    commands = (
        "üìú –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/addadm <id> ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        "/adduser <@username> ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "/list ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        "/emo <emoji> ‚Äì —Å–º–µ–Ω–∏—Ç—å —ç–º–æ–¥–∑–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        "/admins ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤\n"
    )

    text = (
        f"üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!\n\n"
        f"{commands}\n"
        f"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {', '.join(admins) if admins else '–ø–æ–∫–∞ –Ω–µ—Ç'}\n"
        f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {', '.join(users) if users else '–ø–æ–∫–∞ –Ω–µ—Ç'}\n"
        f"–≠–º–æ–¥–∑–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {emoji}"
    )

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–∫—É
    if update.message.chat.type == "private":
        await update.message.reply_text(text)
    else:
        await context.bot.send_message(chat_id=CHAT_ID, text=text)


async def add_admin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    if str(update.effective_user.id) != str(OWNER_ID):
        return await update.message.reply_text("‚õî –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –∞–¥–º–∏–Ω–æ–≤.")

    if not context.args:
        return await update.message.reply_text("–£–∫–∞–∂–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /addadm 123456789")

    new_admin = context.args[0]
    admins = load_list(ADMINS_FILE)
    if new_admin not in admins:
        admins.append(new_admin)
        save_list(ADMINS_FILE, admins)
        await update.message.reply_text(f"‚úÖ –ê–¥–º–∏–Ω {new_admin} –¥–æ–±–∞–≤–ª–µ–Ω!")
    else:
        await update.message.reply_text("‚ö†Ô∏è –≠—Ç–æ—Ç –∞–¥–º–∏–Ω —É–∂–µ –µ—Å—Ç—å.")


async def add_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = str(update.effective_user.id)
    admins = load_list(ADMINS_FILE)
    if user_id not in admins and user_id != str(OWNER_ID):
        return await update.message.reply_text("‚õî –ù–µ—Ç –ø—Ä–∞–≤.")

    if not context.args:
        return await update.message.reply_text("–£–∫–∞–∂–∏ username: /adduser @example")

    new_user = context.args[0]
    users = load_list(USERS_FILE)
    if new_user not in users:
        users.append(new_user)
        save_list(USERS_FILE, users)
        await update.message.reply_text(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_user} –¥–æ–±–∞–≤–ª–µ–Ω!")
    else:
        await update.message.reply_text("‚ö†Ô∏è –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å.")


async def list_users(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    users = load_list(USERS_FILE)
    if users:
        await update.message.reply_text("üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n" + "\n".join(users))
    else:
        await update.message.reply_text("‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.")


async def list_admins(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤"""
    admins = load_list(ADMINS_FILE)
    if admins:
        await update.message.reply_text("üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:\n" + "\n".join(admins))
    else:
        await update.message.reply_text("‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –ø—É—Å—Ç.")


async def change_emoji(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–º–µ–Ω–∞ —ç–º–æ–¥–∑–∏"""
    user_id = str(update.effective_user.id)
    admins = load_list(ADMINS_FILE)
    if user_id not in admins and user_id != str(OWNER_ID):
        return await update.message.reply_text("‚õî –ù–µ—Ç –ø—Ä–∞–≤.")

    if not context.args:
        return await update.message.reply_text("–£–∫–∞–∂–∏ —ç–º–æ–¥–∑–∏: /emo üî•")

    emoji = context.args[0]
    save_list(EMOJI_FILE, [emoji])
    await update.message.reply_text(f"‚úÖ –≠–º–æ–¥–∑–∏ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {emoji}")


async def fortune_message(app: Application):
    """–§–æ—Ä—Ç—É–Ω–∞ –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    users = load_list(USERS_FILE)
    emoji = load_list(EMOJI_FILE)
    emoji = emoji[0] if emoji else "üî•"

    if users:
        chosen = random.choice(users)
        text = f"–§–æ—Ä—Ç—É–Ω–∞ –≤—ã–±—Ä–∞–ª–∞ —Ç–µ–±—è {emoji}\n{chosen}"
        await app.bot.send_message(chat_id=CHAT_ID, text=text)


# ======================
# üöÄ MAIN
# ======================
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("addadm", add_admin))
    app.add_handler(CommandHandler("adduser", add_user))
    app.add_handler(CommandHandler("list", list_users))
    app.add_handler(CommandHandler("admins", list_admins))
    app.add_handler(CommandHandler("emo", change_emoji))

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()


if __name__ == "__main__":
    main()
